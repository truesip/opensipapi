#
# OpenSIPS configuration for outbound PSTN calls
#     Enterprise Voice API Server
#

####### Global Parameters #########

log_level=3
log_stderror=no
log_facility=LOG_LOCAL0

children=4

auto_aliases=no

# Listen on all interfaces
listen=udp:0.0.0.0:5060
listen=tcp:0.0.0.0:5060

# SIP Provider Gateway (configure your SIP trunk)
# Replace with your actual SIP provider details
# Example: sip.provider.com:5060
define PSTN_GATEWAY "sip.provider.com:5060"
define PSTN_USERNAME "your_username"
define PSTN_PASSWORD "your_password"

####### Modules Section ########

#set module path
mpath="/usr/lib/x86_64-linux-gnu/opensips/modules/"

#### SIGNALING module
loadmodule "signaling.so"

#### StateLess module
loadmodule "sl.so"

#### Transaction Module
loadmodule "tm.so"
modparam("tm", "fr_timeout", 5)
modparam("tm", "fr_inv_timeout", 30)
modparam("tm", "restart_fr_on_each_reply", 0)
modparam("tm", "onreply_avp_mode", 1)

#### Record Route Module
loadmodule "rr.so"
modparam("rr", "append_fromtag", 0)

#### MAX ForWarD module
loadmodule "maxfwd.so"

#### SIP MSG OPerationS module
loadmodule "sipmsgops.so"

#### FIFO Management Interface
loadmodule "mi_fifo.so"
modparam("mi_fifo", "fifo_name", "/tmp/opensips_fifo")
modparam("mi_fifo", "fifo_mode", 0666)

#### URI module
loadmodule "uri.so"
modparam("uri", "use_uri_table", 0)

#### USeR LOCation module
loadmodule "usrloc.so"
modparam("usrloc", "nat_bflag", "NAT")
modparam("usrloc", "working_mode_preset", "single-instance-no-db")

#### REGISTRAR module
loadmodule "registrar.so"
modparam("registrar", "tcp_persistent_flag", "TCP_PERSISTENT")

#### ACCounting module
loadmodule "acc.so"
modparam("acc", "early_media", 0)
modparam("acc", "report_cancels", 0)
modparam("acc", "detect_direction", 0)

####### Routing Logic ########

# main request routing logic

route{
	if (!mf_process_maxfwd_header("10")) {
		sl_send_reply("483","Too Many Hops");
		exit;
	}

	if (has_totag()) {
		if (loose_route()) {
			if (is_method("BYE")) {
				setflag(ACC_DO);
			}
			route(RELAY);
		} else {
			if ( is_method("ACK") ) {
				if ( t_check_trans() ) {
					route(RELAY);
				} else {
					exit;
				}
			}
			sl_send_reply("404","Not here");
		}
		exit;
	}

	if (is_method("CANCEL")) {
		if (t_check_trans()) {
			route(RELAY);
		}
		exit;
	}

	t_check_trans();

	if ( !(is_method("REGISTER")  ) ) {
		if (from_uri==myself) {
		} else {
			sl_send_reply("403","Forbidden");
			exit;
		}
	}

	if (is_method("REGISTER")) {
		if (!save("location")) {
			sl_reply_error();
		}
		exit;
	}

	if ($rU==NULL) {
		sl_send_reply("484","Address Incomplete");
		exit;
	}

	if (!lookup("location","m")) {
		t_newtran();
		t_reply("404", "Not Found");
		exit;
	}

	route(RELAY);
}

route[RELAY] {
	if (is_method("INVITE")) {
		setflag(ACC_DO);
	}

	if (!t_relay()) {
		sl_reply_error();
	}
	exit;
}
